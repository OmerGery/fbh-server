{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0", 
      "title": "Friendborhood API",
      "description": "Api to share stuff with people around you",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "paths": {
      "/user": {
        "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "Add user to DB",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
      "post": {
        "tags": ["User"],
        "summary": "Add a new user to DB",
        "requestBody":{
            "content":{
    "application/json":{
      "schema":{      
        "type": "object",
        "$ref": "#/definitions/User"
      },
        "required": true
    }
}
    },
        "responses": {
          "200": {
            "description": "Created"
          }
        }
      }
    },
        "/user/{userName}": {
            "parameters": [
                {
                  "name": "userName",
                  "in": "path",
                  "required": true,
                  "description": "ID of user that we want to find",
                  "type": "string"
                }
              ],
          "get": {
            "tags": ["User"],
            "summary": "Get user by id",
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "patch": {
            "parameters": [
              {
                "name": "userName",
                "in": "path",
                "required": true,
                "description": "Update User in DB"
              },
              {
                "name": "supportedProperties",
                "in": "body",
                "required": true,
                "schema":{
                  "$ref":"#/definitions/User"
                }
              }
            ],
            "tags": ["User"],
            "summary": "Update user by id",
            "responses": {
              "200": {
                "description": "Updated"
                },
              "401": {
                "description": "Unauthorized"
                },
              "404": {
                "description": "id not found"
                }
              }
            }
        },
        "/item": {
          "post": {
            "parameters": [
              {
                "name": "body",
                "in": "body",
                "required": true,
                "description": "Add item to DB",
                "schema": {
                  "$ref": "#/definitions/Item"
                }
              }
            ],
            "tags": ["Item"],
            "summary": "Add a new item to DB",
            "requestBody":{
                "content":{
        "application/json":{
          "schema":{      
            "type": "object",
            "$ref": "#/definitions/Item"
          },
            "required": true
        }
    }
        },
            "responses": {
              "200": {
                "description": "Created"
              }
            }
          },
          "get": {
            "parameters": [
              {
                "name": "categoryName",
                "in": "query",
                "required": false,
                "description": "Category Name of the item we want to find",
                "type": "string"
              }
            ],
            "tags": ["Item"],
            "summary": "Get all/filtered items",
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
      },
      "/item/{itemId}": {
        "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "required": true,
              "description": "ID of item that we want to find",
              "type": "string"
            }
          ],
      "get": {
        "tags": ["Item"],
        "summary": "Get item by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Update item in DB"
          },
          {
            "name": "supportedProperties",
            "in": "body",
            "required": true,
            "schema":{
              "$ref":"#/definitions/Item"
            }
          }
        ],
        "tags": ["Item"],
        "summary": "Update item by id",
        "responses": {
          "200": {
            "description": "Updated"
            },
          "401": {
            "description": "Unauthorized"
            },
          "404": {
            "description": "id not found"
            }
          }
        },
      "delete": {
        "tags": ["Item"],
        "summary": "Delete item by id",
        "responses": {
          "200": {
            "description": "Deleted"
            },
          "401": {
            "description": "Unauthorized"
            },
          "404": {
            "description": "id not found"
            }
          }
        }
    },
    "/offer": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Add offer to DB",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        ],
        "tags": ["Offer"],
        "summary": "Add a new offer to DB",
        "requestBody":{
            "content":{
              "application/json":{
                "schema":{      
                  "type": "object",
                  "$ref": "#/definitions/Offer"
                },
                  "required": true
              }
          }
        },
        "responses": {
          "200": {
            "description": "Created"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "required": false,
            "description": "Category Name of the offer we want to find",
            "type": "string"
          }
        ],
        "tags": ["Offer"],
        "summary": "Get all/filtered Offers",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
      },
      "definitions": {
        "User": {
          "required": ["userName"],
          "properties": {
              "userName": {
              "type": "string",
              "uniqueItems": true
                },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "points":{ 
              "type": "integer"
            },
            "email": {
              "type": "string"
            },
            "registerDate": {
                "type": "integer"
            },
            "favoriteCategory": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "searchRadius": {
              "type": "integer"
            },
            "location": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "geoCode": {
                "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
                }
              }
            }
          }
        }
      }
      },
      "Item": {
        "properties": {
          "itemName": {
            "type": "string",
            "uniqueItems": true
          },
          "imageUrl": {
            "type": "string"
          },
          "priceRange":
          {
            "type": "object",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              }
            }
          },
          "categoryName": {
            "type": "string"
          }
      },
      "required": ["itemId"]
    },
    "Offer": {
      "properties": {
        "itemId": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "priceAsked":{
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "condition": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "location": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string"
            },
            "geoCode": {
              "type": "object",
              "properties": {
                "lat": {
                  "type": "number"
                },
                "lng": {
                  "type": "number"
                  }
                }
              }
            }
          }
        },
    "required": ["offerId"]
  }
    },
    "tags": [
      {
        "name": "User",
        "description": "API for user in the system"
      },
      {
        "name": "Item",
        "description": "API for item in the system"
      },
      {
        "name": "Offer",
        "description": "API for offers in the system"
      }
    ],
    "schemes": ["http", "https"],
    "consumes": ["application/json"],
    "produces": ["application/json"]
  }